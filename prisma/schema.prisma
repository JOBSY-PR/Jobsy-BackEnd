// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employer {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  phone      String
  password   String
  profilePic String   @default("https://firebasestorage.googleapis.com/v0/b/apt-rite-346310.appspot.com/o/profile.jpg?alt=media&token=71a31f30-11ee-49b9-913c-b3682d3f6ea7")
  createdAt  DateTime @default(now())
  job        job[]
}

model employee {
  id         Int    @id @default(autoincrement())
  name       String
  email      String @unique
  phone      String
  password   String
  profilePic String @default("https://firebasestorage.googleapis.com/v0/b/apt-rite-346310.appspot.com/o/profile.jpg?alt=media&token=71a31f30-11ee-49b9-913c-b3682d3f6ea7")

  createdAt DateTime @default(now())
  bid       bid[]
}

model bid {
  id                Int      @id @default(autoincrement())
  description       String
  name              String
  belongToEmployee  Int
  job String
  belongsToEmployee employee @relation(fields: [belongToEmployee], references: [id])
  belongToJob       Int @unique
  belongsToJob      job      @relation(fields: [belongToJob], references: [id])
}

model job {
  id                Int      @id @default(autoincrement())
  title             String
  description       String
  location          String
  salary            String
  status            status   @default(ACTIVE)
  imageUrl          String   @default("no image")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt
  employerId        Int
  belongsToEmployer employer @relation(fields: [employerId], references: [id])
  bid               bid[]
}

model Review {
  id        Int      @id @default(autoincrement())
  review    String
  createdAt DateTime @default(now())
}

enum status {
  ACTIVE
  TAKEN
}
